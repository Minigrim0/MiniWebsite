version: '3'

services:
  # The main flask webserver
  web:
    build:
      dockerfile: docker/web.dockerfile
      context: ..
    expose:
      - 8000
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/static
    networks:
      - private
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.githubcron.schedule: "@every 1h"
      ofelia.job-exec.githubcron.command: "/bin/minigrim0"
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/flask_static
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minigrim0.entrypoints=https"
      - "traefik.http.routers.minigrim0.rule=Host(`minigrim0.xyz`)"
      - "traefik.http.routers.minigrim0.tls=true"
      - "traefik.http.routers.minigrim0.service=nginx-minigrim0-web@docker"
      - "traefik.docker.network=traefik-proxy"
    depends_on:
      - web
    networks:
      - private
      - public
      - traefik-proxy
    restart: unless-stopped

  postgres:
    image: postgres:12.1-alpine
    env_file:
      - ./.env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - private
    restart: unless-stopped

networks:
  private:
    driver: overlay
  public:
    external: true
  traefik-proxy:
    external: true
  ofelia:
    external: true

volumes:
  static_volume:
